- name: get openresty pre-requisites
  ansible.builtin.apt:
    name:
      - wget
      - gnupg
      - ca-certificates
      - lsb-release
    install_recommends: false
    update_cache: true

- name: add openresty repository
  block:
    - name: get key
      ansible.builtin.get_url:
        url: https://openresty.org/package/pubkey.gpg
        dest: /usr/share/keyrings/openresty

    - name: dearmor key
      ansible.builtin.command:
        cmd: gpg --dearmor /usr/share/keyrings/openresty
        creates: /usr/share/keyrings/openresty.gpg

    - name: add openresty apt repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64 signed-by=/usr/share/keyrings/openresty.gpg] http://openresty.org/package/ubuntu {{ ansible_lsb.codename }} main
        state: present
        update_cache: true

- name: install openresty
  ansible.builtin.apt:
    name: openresty
    install_recommends: false
    update_cache: true


- name: create openresty config directory
  ansible.builtin.file:
    path: /etc/openresty/conf.d
    state: directory
    mode: "0755"

- name: configure openresty
  ansible.builtin.copy:
    content: |
      user www-data;
      worker_processes auto;

      events {
        worker_connections 1024;
      }

      http {
        include /etc/openresty/mime.types;
        default_type application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        gzip on;

        include /etc/openresty/conf.d/*.conf;
      }
    dest: /etc/openresty/nginx.conf
    backup: yes

- name: create docker proxies
  ansible.builtin.copy:
    content: |
      server {
        {% if item.subdomain -%}
        server_name {{ item.subdomain }}.luuucyyy.net;
        {%- else -%}
        server_name luuucyyy.net;
        {%- endif %}

        listen 80;

        location / {
          proxy_pass http://0.0.0.0:{{ item.host_port }}/;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;

          proxy_redirect off;
          proxy_buffering off;
        }
      }
    dest: /etc/openresty/conf.d/{{ item.subdomain }}.conf
  loop: "{{ containers }}"

- name: create health endpoint
  ansible.builtin.copy:
    content: |
      server {
        server_name health.luuucyyy.net;

        listen 80;

        location / {
          default_type text/plain;
          content_by_lua_block {
            ngx.say("HEALTH luuucyyy.net")
            ngx.say("=======================================")
            ngx.say("TIME: " .. ngx.utctime() .. " UTC")
            ngx.say("WORKERS: " .. ngx.worker.count())
          }
        }
      }
    dest: /etc/openresty/conf.d/health.conf

- name: start and enable openresty
  ansible.builtin.systemd:
    name: openresty
    state: restarted
    enabled: yes
